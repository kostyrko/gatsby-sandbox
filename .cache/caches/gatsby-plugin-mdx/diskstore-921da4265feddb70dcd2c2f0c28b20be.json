{"expireTime":9007200899439091000,"key":"gatsby-plugin-mdx-entire-payload-dcc17d10b7a779ff291ad2e152033437-","val":{"mdast":{"type":"root","children":[{"type":"jsx","value":"<AuthorBanner />","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":17,"offset":16},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Welcome to the Gatsby Starter Chronoblog! This starter will help you quickly launch a personal website using ","position":{"start":{"line":3,"column":1,"offset":18},"end":{"line":3,"column":110,"offset":127},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/Chronoblog/gatsby-theme-chronoblog","children":[{"type":"text","value":"Chronoblog Gatsby Theme","position":{"start":{"line":3,"column":111,"offset":128},"end":{"line":3,"column":134,"offset":151},"indent":[]}}],"position":{"start":{"line":3,"column":110,"offset":127},"end":{"line":3,"column":190,"offset":207},"indent":[]}},{"type":"text","value":". Replace this text with your own here: ","position":{"start":{"line":3,"column":190,"offset":207},"end":{"line":3,"column":230,"offset":247},"indent":[]}},{"type":"inlineCode","value":"src/pages/index.mdx","position":{"start":{"line":3,"column":230,"offset":247},"end":{"line":3,"column":251,"offset":268},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":18},"end":{"line":3,"column":251,"offset":268},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":5,"column":1,"offset":270},"end":{"line":5,"column":4,"offset":273},"indent":[]}},{"type":"jsx","value":"<FeedSearch />\n<Tags />\n<FeedItems />","position":{"start":{"line":7,"column":1,"offset":275},"end":{"line":9,"column":14,"offset":312},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":12,"column":1,"offset":315},"end":{"line":12,"column":31,"offset":345},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":12,"column":31,"offset":345}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar AuthorBanner = makeShortcode(\"AuthorBanner\");\nvar FeedSearch = makeShortcode(\"FeedSearch\");\nvar Tags = makeShortcode(\"Tags\");\nvar FeedItems = makeShortcode(\"FeedItems\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(AuthorBanner, {\n    mdxType: \"AuthorBanner\"\n  }), mdx(\"p\", null, \"Welcome to the Gatsby Starter Chronoblog! This starter will help you quickly launch a personal website using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/Chronoblog/gatsby-theme-chronoblog\"\n  }, \"Chronoblog Gatsby Theme\"), \". Replace this text with your own here: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/pages/index.mdx\")), mdx(\"hr\", null), mdx(FeedSearch, {\n    mdxType: \"FeedSearch\"\n  }), mdx(Tags, {\n    mdxType: \"Tags\"\n  }), mdx(FeedItems, {\n    mdxType: \"FeedItems\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst AuthorBanner = makeShortcode(\"AuthorBanner\");\nconst FeedSearch = makeShortcode(\"FeedSearch\");\nconst Tags = makeShortcode(\"Tags\");\nconst FeedItems = makeShortcode(\"FeedItems\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <AuthorBanner mdxType=\"AuthorBanner\" />\n    <p>{`Welcome to the Gatsby Starter Chronoblog! This starter will help you quickly launch a personal website using `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Chronoblog/gatsby-theme-chronoblog\"\n      }}>{`Chronoblog Gatsby Theme`}</a>{`. Replace this text with your own here: `}<inlineCode parentName=\"p\">{`src/pages/index.mdx`}</inlineCode></p>\n    <hr></hr>\n    <FeedSearch mdxType=\"FeedSearch\" />\n    <Tags mdxType=\"Tags\" />\n    <FeedItems mdxType=\"FeedItems\" />\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}