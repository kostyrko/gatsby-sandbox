{"expireTime":9007200899439091000,"key":"gatsby-plugin-mdx-entire-payload-07cb5a8b7eefa9f62f84899a126e305f-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note card","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":12,"offset":12},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":14,"offset":14},"indent":[]}},{"type":"text","value":" - the type of content that is fully displayed in the feed of the site - it is suitable for short notes (like this one), videos, podcasts, slides, etc.","position":{"start":{"line":2,"column":14,"offset":14},"end":{"line":2,"column":165,"offset":165},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":165,"offset":165},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Since this is markdown - here you can do ","position":{"start":{"line":4,"column":1,"offset":167},"end":{"line":4,"column":42,"offset":208},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"everything","position":{"start":{"line":4,"column":43,"offset":209},"end":{"line":4,"column":53,"offset":219},"indent":[]}}],"position":{"start":{"line":4,"column":42,"offset":208},"end":{"line":4,"column":54,"offset":220},"indent":[]}},{"type":"text","value":" that allows you to do this format.","position":{"start":{"line":4,"column":54,"offset":220},"end":{"line":4,"column":89,"offset":255},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":167},"end":{"line":4,"column":89,"offset":255},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"See below for examples of how you can use notes.","position":{"start":{"line":6,"column":1,"offset":257},"end":{"line":6,"column":49,"offset":305},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":257},"end":{"line":6,"column":49,"offset":305},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"date\":\"2019-11-02T00:00:00.000Z\",\"tags\":[\"note\",\"project\"]}","position":{"start":{"line":9,"column":1,"offset":308},"end":{"line":9,"column":90,"offset":397},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":9,"column":90,"offset":397}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2019-11-02T00:00:00.000Z\",\n  \"tags\": [\"note\", \"project\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note card\"), \" - the type of content that is fully displayed in the feed of the site - it is suitable for short notes (like this one), videos, podcasts, slides, etc.\"), mdx(\"p\", null, \"Since this is markdown - here you can do \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"everything\"), \" that allows you to do this format.\"), mdx(\"p\", null, \"See below for examples of how you can use notes.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"date\": \"2019-11-02T00:00:00.000Z\",\n  \"tags\": [\"note\", \"project\"]\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p><strong parentName=\"p\">{`Note card`}</strong>{` - the type of content that is fully displayed in the feed of the site - it is suitable for short notes (like this one), videos, podcasts, slides, etc.`}</p>\n    <p>{`Since this is markdown - here you can do `}<em parentName=\"p\">{`everything`}</em>{` that allows you to do this format.`}</p>\n    <p>{`See below for examples of how you can use notes.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}